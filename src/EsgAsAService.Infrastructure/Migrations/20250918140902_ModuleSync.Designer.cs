// <auto-generated />
using System;
using EsgAsAService.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EsgAsAService.Infrastructure.Migrations
{
    [DbContext(typeof(EsgDbContext))]
    [Migration("20250918140902_ModuleSync")]
    partial class ModuleSync
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Industry")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("OrganizationNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("ActivityDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId", "ReportingPeriodId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.Approval", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Approvals");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.AssuranceActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("AssuranceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssuranceLevel")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsIndependent")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Provider")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Scope")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AssuranceActivities");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("PayloadHash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("PayloadJson")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.BoardDiversity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("DiversityPolicy")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<double?>("PercentFemale")
                        .HasColumnType("REAL");

                    b.Property<double?>("PercentIndependent")
                        .HasColumnType("REAL");

                    b.Property<double?>("PercentMale")
                        .HasColumnType("REAL");

                    b.Property<double?>("PercentOther")
                        .HasColumnType("REAL");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SelectionProcess")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BoardDiversities");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.CalculationResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("Adjustment")
                        .HasColumnType("REAL");

                    b.Property<double>("Co2eKg")
                        .HasColumnType("REAL");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<double>("Factor")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<double>("QuantityNormalized")
                        .HasColumnType("REAL");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ScopeEntryId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ScopeEntryId");

                    b.ToTable("CalculationResults");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.Certificate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Standard")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("ValidFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("ValidTo")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.DataSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DataSources");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.Deviation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ScopeEntryId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Deviations");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.EmissionFactorV2", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DataSourceId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("ValidFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("ValidTo")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Country", "Year", "Type");

                    b.ToTable("EmissionFactorsV2");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.EvidenceDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BlobUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ScopeEntryId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ScopeEntryId");

                    b.ToTable("EvidenceDocuments");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.Financials", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Revenue")
                        .HasColumnType("REAL");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId", "ReportingPeriodId");

                    b.ToTable("Financials");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.GovernanceCase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double?>("Amount")
                        .HasColumnType("REAL");

                    b.Property<string>("CaseRef")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Outcome")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId", "ReportingPeriodId");

                    b.ToTable("GovernanceCases");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.GovernanceOversight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BoardOversight")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ClimateExpertOnBoard")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Incentives")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ManagementResponsibilities")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GovernanceOversights");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.HRHeadcount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<double?>("FteFemale")
                        .HasColumnType("REAL");

                    b.Property<double?>("FteMale")
                        .HasColumnType("REAL");

                    b.Property<double?>("FteOther")
                        .HasColumnType("REAL");

                    b.Property<double>("FteTotal")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId", "ReportingPeriodId");

                    b.ToTable("HRHeadcounts");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.HRPayroll", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double?>("AvgSalaryFemale")
                        .HasColumnType("REAL");

                    b.Property<double?>("AvgSalaryMale")
                        .HasColumnType("REAL");

                    b.Property<double?>("CollectiveAgreementCoveragePct")
                        .HasColumnType("REAL");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId", "ReportingPeriodId");

                    b.ToTable("HRPayrolls");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.HRTraining", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<double?>("TotalTrainingHours")
                        .HasColumnType("REAL");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId", "ReportingPeriodId");

                    b.ToTable("HRTrainings");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.HumanRightsAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("DueDiligenceInPlace")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HighRiskAreas")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PolicyExists")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remediation")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TrainingProvided")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("HumanRightsAssessments");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("InSensitiveArea")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SensitiveAreaNote")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.MaterialFlow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<double>("QuantityTonnes")
                        .HasColumnType("REAL");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceDoc")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId", "ReportingPeriodId");

                    b.ToTable("MaterialFlows");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.MethodologyStatement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ConsolidationApproach")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmissionFactorSources")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("EstimationApproach")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaterialityThreshold")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportingBoundary")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MethodologyStatements");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.Organisation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Industry")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("OrganizationNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name", "OrganizationNumber", "CountryCode");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.PeriodMapping", b =>
                {
                    b.Property<Guid>("V1PeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("V2PeriodId")
                        .HasColumnType("TEXT");

                    b.HasKey("V1PeriodId");

                    b.ToTable("PeriodMappings");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.PolicyRegister", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ConfidentialityOmissions")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Goal")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NextMilestone")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("OmissionNote")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PolicyAntiCorruption")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PolicyCircular")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PolicyClimate")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PolicyDataPrivacy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PolicyEnvironment")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PolicySupplyChain")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PolicyWhistleblower")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PolicyRegisters");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.PollutionRegister", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<string>("ReportingId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportingSystem")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Substance")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId", "ReportingPeriodId");

                    b.ToTable("PollutionRegisters");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.ReportDraft", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ReportDrafts");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.ReportingPeriodV2", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId", "Year");

                    b.ToTable("ReportingPeriodsV2");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.RiskAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClimateRisks")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mitigations")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Opportunities")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Process")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeHorizon")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("RiskAssessments");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.SafetyIncident", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<double>("HoursWorked")
                        .HasColumnType("REAL");

                    b.Property<int>("IncidentsCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceDoc")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId", "ReportingPeriodId");

                    b.ToTable("SafetyIncidents");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.ScopeEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Adjustment")
                        .HasColumnType("REAL");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EmissionFactorId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Scope")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("ScopeEntries");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.SectionMetricInput", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Metric")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<double?>("NumericValue")
                        .HasColumnType("REAL");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("TextValue")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SectionMetricInputs");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.StagingDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PayloadJson")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("ProcessedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("ReceivedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId", "ReportingPeriodId", "Type");

                    b.ToTable("StagingDocuments");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.StagingLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LineNo")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId", "LineNo")
                        .IsUnique();

                    b.ToTable("StagingLines");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.StakeholderEngagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("EngagementProcess")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KeyTopics")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("StakeholderGroups")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("WorkerRepresentation")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("StakeholderEngagements");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.StrategyTarget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<double?>("EmissionReductionTargetPct")
                        .HasColumnType("REAL");

                    b.Property<string>("InvestmentPlan")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LongTermTarget")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Progress")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortTermTarget")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("TargetYear")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("StrategyTargets");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Units");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.UnitConversion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<double>("Factor")
                        .HasColumnType("REAL");

                    b.Property<Guid>("FromUnitId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ToUnitId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FromUnitId", "ToUnitId")
                        .IsUnique();

                    b.ToTable("UnitConversions");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.ValueChainCoverage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("DataGaps")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("DownstreamCoverage")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Scope3Categories")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("UpstreamCoverage")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ValueChainCoverages");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.VsmeMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("VsmeMappings");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.WasteManifest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Carrier")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("EakCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ManifestId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<double>("QuantityKg")
                        .HasColumnType("REAL");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId", "ReportingPeriodId");

                    b.ToTable("WasteManifests");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Core.WaterMeter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<double?>("DischargeM3")
                        .HasColumnType("REAL");

                    b.Property<double>("IntakeM3")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevisionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceDoc")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId", "ReportingPeriodId");

                    b.ToTable("WaterMeters");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.EmissionFactor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<double>("KgCO2ePerUnit")
                        .HasColumnType("REAL");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("ValidFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("ValidTo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Source", "Category", "Unit");

                    b.ToTable("EmissionFactors");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.EnvironmentalActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<double>("CO2eKg")
                        .HasColumnType("REAL");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<double>("EmissionFactorKgPerUnit")
                        .HasColumnType("REAL");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReportingPeriodId");

                    b.ToTable("EnvironmentalActivities");

                    b.HasDiscriminator<string>("ActivityType").HasValue("EnvironmentalActivity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.GovernancePractices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("AntiCorruptionPolicy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DataPrivacyPolicy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<double>("PercentFemaleBoard")
                        .HasColumnType("REAL");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("WhistleblowerPolicy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ReportingPeriodId")
                        .IsUnique();

                    b.ToTable("GovernancePractices");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.ReportingPeriod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCalendarYear")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("ReportingPeriods");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.SocialIndicators", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeCount")
                        .HasColumnType("INTEGER");

                    b.Property<double>("LostTimeInjuries")
                        .HasColumnType("REAL");

                    b.Property<double>("PercentFemaleEmployees")
                        .HasColumnType("REAL");

                    b.Property<Guid>("ReportingPeriodId")
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalHoursWorked")
                        .HasColumnType("REAL");

                    b.Property<double>("TrainingHours")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ReportingPeriodId")
                        .IsUnique();

                    b.ToTable("SocialIndicators");
                });

            modelBuilder.Entity("EsgAsAService.Infrastructure.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Scope1Activity", b =>
                {
                    b.HasBaseType("EsgAsAService.Domain.Entities.EnvironmentalActivity");

                    b.Property<string>("TypeDetail")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Scope1Activity");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Scope2Activity", b =>
                {
                    b.HasBaseType("EsgAsAService.Domain.Entities.EnvironmentalActivity");

                    b.Property<int>("Method")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Scope2Activity");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Scope3Activity", b =>
                {
                    b.HasBaseType("EsgAsAService.Domain.Entities.EnvironmentalActivity");

                    b.Property<int>("CategoryNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Scope3Activity");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.EnvironmentalActivity", b =>
                {
                    b.HasOne("EsgAsAService.Domain.Entities.ReportingPeriod", "ReportingPeriod")
                        .WithMany("EnvironmentalActivities")
                        .HasForeignKey("ReportingPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportingPeriod");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.GovernancePractices", b =>
                {
                    b.HasOne("EsgAsAService.Domain.Entities.ReportingPeriod", "ReportingPeriod")
                        .WithOne("GovernancePractices")
                        .HasForeignKey("EsgAsAService.Domain.Entities.GovernancePractices", "ReportingPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportingPeriod");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.ReportingPeriod", b =>
                {
                    b.HasOne("EsgAsAService.Domain.Entities.Company", "Company")
                        .WithMany("ReportingPeriods")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.SocialIndicators", b =>
                {
                    b.HasOne("EsgAsAService.Domain.Entities.ReportingPeriod", "ReportingPeriod")
                        .WithOne("SocialIndicators")
                        .HasForeignKey("EsgAsAService.Domain.Entities.SocialIndicators", "ReportingPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportingPeriod");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EsgAsAService.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EsgAsAService.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EsgAsAService.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EsgAsAService.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.Company", b =>
                {
                    b.Navigation("ReportingPeriods");
                });

            modelBuilder.Entity("EsgAsAService.Domain.Entities.ReportingPeriod", b =>
                {
                    b.Navigation("EnvironmentalActivities");

                    b.Navigation("GovernancePractices");

                    b.Navigation("SocialIndicators");
                });
#pragma warning restore 612, 618
        }
    }
}
